{"ast":null,"code":"var _jsxFileName = \"/Users/muntaqamaahi/onlineasssements/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const [localTransactions, setLocalTransactions] = useState(transactions); // Sync localTransactions with incoming transactions prop\n\n  useEffect(() => {\n    setLocalTransactions(transactions);\n  }, [transactions]);\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n\n    try {\n      // Optimistically update the state\n      setLocalTransactions(prevTransactions => prevTransactions.map(transaction => transaction.id === transactionId ? { ...transaction,\n        approved: newValue\n      } : transaction)); // Send update to the backend\n\n      await fetchWithoutCache(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue\n      });\n    } catch (error) {\n      console.error(\"Failed to update transaction approval:\", error); // Rollback the state if the backend update fails\n\n      setLocalTransactions(prevTransactions => prevTransactions.map(transaction => transaction.id === transactionId ? { ...transaction,\n        approved: !newValue\n      } : transaction));\n    }\n  }, [fetchWithoutCache]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: localTransactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"VxAXseweVrJi2TL4JjeWV23sBJI=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useState","useEffect","useCallback","useCustomFetch","TransactionPane","Transactions","transactions","fetchWithoutCache","loading","localTransactions","setLocalTransactions","setTransactionApproval","transactionId","newValue","prevTransactions","map","transaction","id","approved","value","error","console"],"sources":["/Users/muntaqamaahi/onlineasssements/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { SetTransactionApprovalParams } from \"src/utils/types\";\nimport { TransactionsComponent, SetTransactionApprovalFunction } from \"./types\";\n\nexport const Transactions: TransactionsComponent = ({ transactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch();\n  const [localTransactions, setLocalTransactions] = useState(transactions);\n\n  // Sync localTransactions with incoming transactions prop\n  useEffect(() => {\n    setLocalTransactions(transactions);\n  }, [transactions]);\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      try {\n        // Optimistically update the state\n        setLocalTransactions((prevTransactions) =>\n          prevTransactions!.map((transaction) =>\n            transaction.id === transactionId ? { ...transaction, approved: newValue } : transaction\n          )\n        );\n\n        // Send update to the backend\n        await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n          transactionId,\n          value: newValue,\n        });\n      } catch (error) {\n        console.error(\"Failed to update transaction approval:\", error);\n        // Rollback the state if the backend update fails\n        setLocalTransactions((prevTransactions) =>\n          prevTransactions!.map((transaction) =>\n            transaction.id === transactionId ? { ...transaction, approved: !newValue } : transaction\n          )\n        );\n      }\n    },\n    [fetchWithoutCache]\n  );\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {localTransactions!.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,eAAT,QAAgC,mBAAhC;;AAIA,OAAO,MAAMC,YAAmC,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACvE,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCL,cAAc,EAArD;EACA,MAAM,CAACM,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAACM,YAAD,CAA1D,CAFuE,CAIvE;;EACAL,SAAS,CAAC,MAAM;IACdS,oBAAoB,CAACJ,YAAD,CAApB;EACD,CAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;EAIA,MAAMK,sBAAsB,GAAGT,WAAW,CACxC,eAAuC;IAAA,IAAhC;MAAEU,aAAF;MAAiBC;IAAjB,CAAgC;;IACrC,IAAI;MACF;MACAH,oBAAoB,CAAEI,gBAAD,IACnBA,gBAAgB,CAAEC,GAAlB,CAAuBC,WAAD,IACpBA,WAAW,CAACC,EAAZ,KAAmBL,aAAnB,GAAmC,EAAE,GAAGI,WAAL;QAAkBE,QAAQ,EAAEL;MAA5B,CAAnC,GAA4EG,WAD9E,CADkB,CAApB,CAFE,CAQF;;MACA,MAAMT,iBAAiB,CAAqC,wBAArC,EAA+D;QACpFK,aADoF;QAEpFO,KAAK,EAAEN;MAF6E,CAA/D,CAAvB;IAID,CAbD,CAaE,OAAOO,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAc,wCAAd,EAAwDA,KAAxD,EADc,CAEd;;MACAV,oBAAoB,CAAEI,gBAAD,IACnBA,gBAAgB,CAAEC,GAAlB,CAAuBC,WAAD,IACpBA,WAAW,CAACC,EAAZ,KAAmBL,aAAnB,GAAmC,EAAE,GAAGI,WAAL;QAAkBE,QAAQ,EAAE,CAACL;MAA7B,CAAnC,GAA6EG,WAD/E,CADkB,CAApB;IAKD;EACF,CAxBuC,EAyBxC,CAACT,iBAAD,CAzBwC,CAA1C;EA4BA,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGE,iBAAiB,CAAEM,GAAnB,CAAwBC,WAAD,iBACtB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAER,OAHX;MAIE,sBAAsB,EAAEG;IAJ1B,GACOK,WAAW,CAACC,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAjDM;;GAAMZ,Y;UAC4BF,c;;;KAD5BE,Y"},"metadata":{},"sourceType":"module"}