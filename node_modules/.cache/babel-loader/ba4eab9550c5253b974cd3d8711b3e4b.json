{"ast":null,"code":"var _jsxFileName = \"/Users/muntaqamaahi/onlineasssements/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx\";\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionPane = _ref => {\n  let {\n    transaction,\n    loading,\n    setTransactionApproval\n  } = _ref;\n  console.log(\"Rendering TransactionPane for transaction:\", transaction);\n\n  const handleCheckboxChange = async newValue => {\n    console.log(`Checkbox changed for transactionId=${transaction.id}, newValue=${newValue}`);\n    await setTransactionApproval({\n      transactionId: transaction.id,\n      newValue\n    });\n    console.log(`Transaction approval updated for transactionId=${transaction.id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampPane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampPane--content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText\",\n        children: transaction.merchant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: moneyFormatter.format(transaction.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText--hushed RampText--s\",\n        children: [transaction.employee.firstName, \" \", transaction.employee.lastName, \" - \", transaction.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputCheckbox, {\n      id: transaction.id,\n      checked: transaction.approved,\n      disabled: loading,\n      onChange: handleCheckboxChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = TransactionPane;\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionPane\");","map":{"version":3,"names":["InputCheckbox","TransactionPane","transaction","loading","setTransactionApproval","console","log","handleCheckboxChange","newValue","id","transactionId","merchant","moneyFormatter","format","amount","employee","firstName","lastName","date","approved","Intl","NumberFormat","style","currency"],"sources":["/Users/muntaqamaahi/onlineasssements/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx"],"sourcesContent":["import { InputCheckbox } from \"../InputCheckbox\";\nimport { TransactionPaneComponent } from \"./types\";\n\nexport const TransactionPane: TransactionPaneComponent = ({\n  transaction,\n  loading,\n  setTransactionApproval,\n}) => {\n  console.log(\"Rendering TransactionPane for transaction:\", transaction);\n\n  const handleCheckboxChange = async (newValue: boolean) => {\n    console.log(`Checkbox changed for transactionId=${transaction.id}, newValue=${newValue}`);\n\n    await setTransactionApproval({\n      transactionId: transaction.id,\n      newValue,\n    });\n\n    console.log(`Transaction approval updated for transactionId=${transaction.id}`);\n  };\n\n  return (\n    <div className=\"RampPane\">\n      <div className=\"RampPane--content\">\n        <p className=\"RampText\">{transaction.merchant}</p>\n        <b>{moneyFormatter.format(transaction.amount)}</b>\n        <p className=\"RampText--hushed RampText--s\">\n          {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n        </p>\n      </div>\n      <InputCheckbox\n        id={transaction.id}\n        checked={transaction.approved}\n        disabled={loading}\n        onChange={handleCheckboxChange}\n      />\n    </div>\n  );\n};\n\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n"],"mappings":";AAAA,SAASA,aAAT,QAA8B,kBAA9B;;AAGA,OAAO,MAAMC,eAAyC,GAAG,QAInD;EAAA,IAJoD;IACxDC,WADwD;IAExDC,OAFwD;IAGxDC;EAHwD,CAIpD;EACJC,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DJ,WAA1D;;EAEA,MAAMK,oBAAoB,GAAG,MAAOC,QAAP,IAA6B;IACxDH,OAAO,CAACC,GAAR,CAAa,sCAAqCJ,WAAW,CAACO,EAAG,cAAaD,QAAS,EAAvF;IAEA,MAAMJ,sBAAsB,CAAC;MAC3BM,aAAa,EAAER,WAAW,CAACO,EADA;MAE3BD;IAF2B,CAAD,CAA5B;IAKAH,OAAO,CAACC,GAAR,CAAa,kDAAiDJ,WAAW,CAACO,EAAG,EAA7E;EACD,CATD;;EAWA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAG,SAAS,EAAC,UAAb;QAAA,UAAyBP,WAAW,CAACS;MAArC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIC,cAAc,CAACC,MAAf,CAAsBX,WAAW,CAACY,MAAlC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAG,SAAS,EAAC,8BAAb;QAAA,WACGZ,WAAW,CAACa,QAAZ,CAAqBC,SADxB,OACoCd,WAAW,CAACa,QAAZ,CAAqBE,QADzD,SACsEf,WAAW,CAACgB,IADlF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,aAAD;MACE,EAAE,EAAEhB,WAAW,CAACO,EADlB;MAEE,OAAO,EAAEP,WAAW,CAACiB,QAFvB;MAGE,QAAQ,EAAEhB,OAHZ;MAIE,QAAQ,EAAEI;IAJZ;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAnCM;KAAMN,e;AAqCb,MAAMW,cAAc,GAAG,IAAIQ,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;EACpDC,KAAK,EAAE,UAD6C;EAEpDC,QAAQ,EAAE;AAF0C,CAA/B,CAAvB"},"metadata":{},"sourceType":"module"}