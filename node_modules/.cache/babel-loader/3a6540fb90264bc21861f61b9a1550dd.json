{"ast":null,"code":"var _jsxFileName = \"/Users/muntaqamaahi/onlineasssements/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState, useEffect } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const [localTransactions, setLocalTransactions] = useState(transactions);\n  const [localApprovals, setLocalApprovals] = useState({}); // Keep local transactions in sync with the prop\n\n  useEffect(() => {\n    setLocalTransactions(transactions); // Update localApprovals only if transactions change\n\n    if (transactions && localTransactions && transactions !== localTransactions) {\n      const newApprovals = transactions.reduce((acc, transaction) => {\n        acc[transaction.id] = transaction.approved;\n        return acc;\n      }, {});\n      setLocalApprovals(newApprovals);\n    }\n  }, [transactions]);\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n\n    try {\n      //  backend update call\n      await fetchWithoutCache(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue\n      }); // Update the local state \n\n      setLocalTransactions(prevTransactions => {\n        if (!prevTransactions) {\n          return [];\n        }\n\n        return prevTransactions.map(transaction => transaction.id === transactionId ? { ...transaction,\n          approved: newValue\n        } : transaction);\n      });\n    } catch (error) {\n      console.error(\"Failed to update transaction approval:\", error);\n    }\n  }, [fetchWithoutCache]);\n\n  if (localTransactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: localTransactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"3VQALWLdlRI2XF0ar21EFcmXmfg=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useState","useEffect","useCustomFetch","TransactionPane","Transactions","transactions","fetchWithoutCache","loading","localTransactions","setLocalTransactions","localApprovals","setLocalApprovals","newApprovals","reduce","acc","transaction","id","approved","setTransactionApproval","transactionId","newValue","value","prevTransactions","map","error","console"],"sources":["/Users/muntaqamaahi/onlineasssements/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback, useState, useEffect } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { SetTransactionApprovalParams } from \"src/utils/types\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\";\n\nexport const Transactions: TransactionsComponent = ({ transactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch();\n  const [localTransactions, setLocalTransactions] = useState(transactions);\n  const [localApprovals, setLocalApprovals] = useState({});\n  // Keep local transactions in sync with the prop\n  useEffect(() => {\n    setLocalTransactions(transactions);\n\n    // Update localApprovals only if transactions change\n    if (transactions && localTransactions && transactions !== localTransactions) {\n      const newApprovals = transactions.reduce((acc, transaction) => {\n        acc[transaction.id] = transaction.approved;\n        return acc;\n      }, {});\n      setLocalApprovals(newApprovals);\n    }\n  }, [transactions]);\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      try {\n        //  backend update call\n        await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n          transactionId,\n          value: newValue,\n        });\n\n\n        // Update the local state \n        setLocalTransactions((prevTransactions) => {\n          if (!prevTransactions) {\n            return [];\n          }\n          return prevTransactions.map((transaction) =>\n            transaction.id === transactionId ? { ...transaction, approved: newValue } : transaction\n          );\n        });\n      }\n\n\n      catch (error) {\n        console.error(\"Failed to update transaction approval:\", error);\n      }\n    },\n    [fetchWithoutCache]\n  );\n\n\n\n  if (localTransactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>;\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {localTransactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  );\n};"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;;AAGA,OAAO,MAAMC,YAAmC,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACvE,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCL,cAAc,EAArD;EACA,MAAM,CAACM,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAACK,YAAD,CAA1D;EACA,MAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD,CAHuE,CAIvE;;EACAC,SAAS,CAAC,MAAM;IACdQ,oBAAoB,CAACJ,YAAD,CAApB,CADc,CAGd;;IACA,IAAIA,YAAY,IAAIG,iBAAhB,IAAqCH,YAAY,KAAKG,iBAA1D,EAA6E;MAC3E,MAAMI,YAAY,GAAGP,YAAY,CAACQ,MAAb,CAAoB,CAACC,GAAD,EAAMC,WAAN,KAAsB;QAC7DD,GAAG,CAACC,WAAW,CAACC,EAAb,CAAH,GAAsBD,WAAW,CAACE,QAAlC;QACA,OAAOH,GAAP;MACD,CAHoB,EAGlB,EAHkB,CAArB;MAIAH,iBAAiB,CAACC,YAAD,CAAjB;IACD;EACF,CAXQ,EAWN,CAACP,YAAD,CAXM,CAAT;EAaA,MAAMa,sBAAsB,GAAGnB,WAAW,CACxC,eAAuC;IAAA,IAAhC;MAAEoB,aAAF;MAAiBC;IAAjB,CAAgC;;IACrC,IAAI;MACF;MACA,MAAMd,iBAAiB,CAAqC,wBAArC,EAA+D;QACpFa,aADoF;QAEpFE,KAAK,EAAED;MAF6E,CAA/D,CAAvB,CAFE,CAQF;;MACAX,oBAAoB,CAAEa,gBAAD,IAAsB;QACzC,IAAI,CAACA,gBAAL,EAAuB;UACrB,OAAO,EAAP;QACD;;QACD,OAAOA,gBAAgB,CAACC,GAAjB,CAAsBR,WAAD,IAC1BA,WAAW,CAACC,EAAZ,KAAmBG,aAAnB,GAAmC,EAAE,GAAGJ,WAAL;UAAkBE,QAAQ,EAAEG;QAA5B,CAAnC,GAA4EL,WADvE,CAAP;MAGD,CAPmB,CAApB;IAQD,CAjBD,CAoBA,OAAOS,KAAP,EAAc;MACZC,OAAO,CAACD,KAAR,CAAc,wCAAd,EAAwDA,KAAxD;IACD;EACF,CAzBuC,EA0BxC,CAAClB,iBAAD,CA1BwC,CAA1C;;EA+BA,IAAIE,iBAAiB,KAAK,IAA1B,EAAgC;IAC9B,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGA,iBAAiB,CAACe,GAAlB,CAAuBR,WAAD,iBACrB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAER,OAHX;MAIE,sBAAsB,EAAEW;IAJ1B,GACOH,WAAW,CAACC,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAjEM;;GAAMZ,Y;UAC4BF,c;;;KAD5BE,Y"},"metadata":{},"sourceType":"module"}