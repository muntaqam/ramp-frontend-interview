{"ast":null,"code":"var _jsxFileName = \"/Users/muntaqamaahi/onlineasssements/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState, useEffect } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions,\n    setPaginatedTransactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const [localTransactions, setLocalTransactions] = useState(transactions);\n  useEffect(() => {\n    setLocalTransactions(transactions);\n  }, [transactions]);\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n\n    try {\n      await fetchWithoutCache(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue\n      }); // Update `paginatedTransactions` directly via `setPaginatedTransactions`\n\n      setPaginatedTransactions(prev => {\n        if (!prev || !prev.data) return prev;\n        return { ...prev,\n          data: prev.data.map(transaction => transaction.id === transactionId ? { ...transaction,\n            approved: newValue\n          } : transaction)\n        };\n      }); // Also update local state to reflect the change immediately\n\n      setLocalTransactions(prevTransactions => prevTransactions.map(transaction => transaction.id === transactionId ? { ...transaction,\n        approved: newValue\n      } : transaction));\n    } catch (error) {\n      console.error(\"Failed to update transaction approval:\", error);\n    }\n  }, [fetchWithoutCache, setPaginatedTransactions]);\n\n  if (localTransactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: localTransactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"VxAXseweVrJi2TL4JjeWV23sBJI=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useState","useEffect","useCustomFetch","TransactionPane","Transactions","transactions","setPaginatedTransactions","fetchWithoutCache","loading","localTransactions","setLocalTransactions","setTransactionApproval","transactionId","newValue","value","prev","data","map","transaction","id","approved","prevTransactions","error","console"],"sources":["/Users/muntaqamaahi/onlineasssements/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback, useState, useEffect } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { SetTransactionApprovalParams } from \"src/utils/types\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\";\nimport { usePaginatedTransactions } from \"../../hooks/\"\n\nexport const Transactions: TransactionsComponent = ({ transactions, setPaginatedTransactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch();\n  const [localTransactions, setLocalTransactions] = useState(transactions);\n\n  useEffect(() => {\n    setLocalTransactions(transactions);\n  }, [transactions]);\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      try {\n        await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n          transactionId,\n          value: newValue,\n        });\n\n        // Update `paginatedTransactions` directly via `setPaginatedTransactions`\n        setPaginatedTransactions((prev) => {\n          if (!prev || !prev.data) return prev;\n          return {\n            ...prev,\n            data: prev.data.map((transaction) =>\n              transaction.id === transactionId ? { ...transaction, approved: newValue } : transaction\n            ),\n          };\n        });\n\n        // Also update local state to reflect the change immediately\n        setLocalTransactions((prevTransactions) =>\n          prevTransactions.map((transaction) =>\n            transaction.id === transactionId ? { ...transaction, approved: newValue } : transaction\n          )\n        );\n      } catch (error) {\n        console.error(\"Failed to update transaction approval:\", error);\n      }\n    },\n    [fetchWithoutCache, setPaginatedTransactions]\n  );\n\n  if (localTransactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>;\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {localTransactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;;AAIA,OAAO,MAAMC,YAAmC,GAAG,QAAgD;EAAA;;EAAA,IAA/C;IAAEC,YAAF;IAAgBC;EAAhB,CAA+C;EACjG,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCN,cAAc,EAArD;EACA,MAAM,CAACO,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAACK,YAAD,CAA1D;EAEAJ,SAAS,CAAC,MAAM;IACdS,oBAAoB,CAACL,YAAD,CAApB;EACD,CAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;EAIA,MAAMM,sBAAsB,GAAGZ,WAAW,CACxC,eAAuC;IAAA,IAAhC;MAAEa,aAAF;MAAiBC;IAAjB,CAAgC;;IACrC,IAAI;MACF,MAAMN,iBAAiB,CAAqC,wBAArC,EAA+D;QACpFK,aADoF;QAEpFE,KAAK,EAAED;MAF6E,CAA/D,CAAvB,CADE,CAMF;;MACAP,wBAAwB,CAAES,IAAD,IAAU;QACjC,IAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACC,IAAnB,EAAyB,OAAOD,IAAP;QACzB,OAAO,EACL,GAAGA,IADE;UAELC,IAAI,EAAED,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAeC,WAAD,IAClBA,WAAW,CAACC,EAAZ,KAAmBP,aAAnB,GAAmC,EAAE,GAAGM,WAAL;YAAkBE,QAAQ,EAAEP;UAA5B,CAAnC,GAA4EK,WADxE;QAFD,CAAP;MAMD,CARuB,CAAxB,CAPE,CAiBF;;MACAR,oBAAoB,CAAEW,gBAAD,IACnBA,gBAAgB,CAACJ,GAAjB,CAAsBC,WAAD,IACnBA,WAAW,CAACC,EAAZ,KAAmBP,aAAnB,GAAmC,EAAE,GAAGM,WAAL;QAAkBE,QAAQ,EAAEP;MAA5B,CAAnC,GAA4EK,WAD9E,CADkB,CAApB;IAKD,CAvBD,CAuBE,OAAOI,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAc,wCAAd,EAAwDA,KAAxD;IACD;EACF,CA5BuC,EA6BxC,CAACf,iBAAD,EAAoBD,wBAApB,CA7BwC,CAA1C;;EAgCA,IAAIG,iBAAiB,KAAK,IAA1B,EAAgC;IAC9B,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGA,iBAAiB,CAACQ,GAAlB,CAAuBC,WAAD,iBACrB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAEV,OAHX;MAIE,sBAAsB,EAAEG;IAJ1B,GACOO,WAAW,CAACC,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAxDM;;GAAMf,Y;UAC4BF,c;;;KAD5BE,Y"},"metadata":{},"sourceType":"module"}