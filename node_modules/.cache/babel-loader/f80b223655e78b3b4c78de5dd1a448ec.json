{"ast":null,"code":"var _jsxFileName = \"/Users/muntaqamaahi/onlineasssements/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionPane = _ref => {\n  _s();\n\n  let {\n    transaction,\n    loading,\n    setTransactionApproval: consumerSetTransactionApproval\n  } = _ref;\n  const [approved, setApproved] = useState(transaction.approved);\n  console.log(\"Loading state in TransactionPane:\", loading);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampPane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampPane--content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText\",\n        children: [transaction.merchant, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: moneyFormatter.format(transaction.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText--hushed RampText--s\",\n        children: [transaction.employee.firstName, \" \", transaction.employee.lastName, \" - \", transaction.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputCheckbox, {\n      id: transaction.id,\n      checked: approved,\n      disabled: loading,\n      onChange: async newValue => {\n        console.log(\"Checkbox clicked, setting new value to:\", newValue);\n\n        try {\n          await consumerSetTransactionApproval({\n            transactionId: transaction.id,\n            newValue\n          });\n        } catch (error) {\n          console.error(\"Failed to set transaction approval:\", error);\n        }\n\n        setApproved(newValue);\n        console.log(\"State updated to:\", newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionPane, \"KPAjtgwy0mvFAelnTZhq541SWIA=\");\n\n_c = TransactionPane;\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionPane\");","map":{"version":3,"names":["useState","InputCheckbox","TransactionPane","transaction","loading","setTransactionApproval","consumerSetTransactionApproval","approved","setApproved","console","log","merchant","moneyFormatter","format","amount","employee","firstName","lastName","date","id","newValue","transactionId","error","Intl","NumberFormat","style","currency"],"sources":["/Users/muntaqamaahi/onlineasssements/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { InputCheckbox } from \"../InputCheckbox\"\nimport { TransactionPaneComponent } from \"./types\"\n\nexport const TransactionPane: TransactionPaneComponent = ({\n  transaction,\n  loading,\n  setTransactionApproval: consumerSetTransactionApproval,\n}) => {\n  const [approved, setApproved] = useState(transaction.approved)\n  console.log(\"Loading state in TransactionPane:\", loading);\n\n\n\n\n  return (\n    <div className=\"RampPane\">\n      <div className=\"RampPane--content\">\n        <p className=\"RampText\">{transaction.merchant} </p>\n        <b>{moneyFormatter.format(transaction.amount)}</b>\n        <p className=\"RampText--hushed RampText--s\">\n          {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n        </p>\n      </div>\n\n\n      <InputCheckbox\n        id={transaction.id}\n        checked={approved}\n        disabled={loading}\n        onChange={async (newValue) => {\n          console.log(\"Checkbox clicked, setting new value to:\", newValue);\n          try {\n            await consumerSetTransactionApproval({\n              transactionId: transaction.id,\n              newValue,\n            });\n          } catch (error) {\n            console.error(\"Failed to set transaction approval:\", error);\n          }\n          setApproved(newValue);\n          console.log(\"State updated to:\", newValue);\n        }}\n\n\n      />\n    </div>\n  )\n}\n\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n})\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAGA,OAAO,MAAMC,eAAyC,GAAG,QAInD;EAAA;;EAAA,IAJoD;IACxDC,WADwD;IAExDC,OAFwD;IAGxDC,sBAAsB,EAAEC;EAHgC,CAIpD;EACJ,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACG,WAAW,CAACI,QAAb,CAAxC;EACAE,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDN,OAAjD;EAKA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAG,SAAS,EAAC,UAAb;QAAA,WAAyBD,WAAW,CAACQ,QAArC;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIC,cAAc,CAACC,MAAf,CAAsBV,WAAW,CAACW,MAAlC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAG,SAAS,EAAC,8BAAb;QAAA,WACGX,WAAW,CAACY,QAAZ,CAAqBC,SADxB,OACoCb,WAAW,CAACY,QAAZ,CAAqBE,QADzD,SACsEd,WAAW,CAACe,IADlF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAUE,QAAC,aAAD;MACE,EAAE,EAAEf,WAAW,CAACgB,EADlB;MAEE,OAAO,EAAEZ,QAFX;MAGE,QAAQ,EAAEH,OAHZ;MAIE,QAAQ,EAAE,MAAOgB,QAAP,IAAoB;QAC5BX,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDU,QAAvD;;QACA,IAAI;UACF,MAAMd,8BAA8B,CAAC;YACnCe,aAAa,EAAElB,WAAW,CAACgB,EADQ;YAEnCC;UAFmC,CAAD,CAApC;QAID,CALD,CAKE,OAAOE,KAAP,EAAc;UACdb,OAAO,CAACa,KAAR,CAAc,qCAAd,EAAqDA,KAArD;QACD;;QACDd,WAAW,CAACY,QAAD,CAAX;QACAX,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCU,QAAjC;MACD;IAhBH;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD,CA5CM;;GAAMlB,e;;KAAAA,e;AA8Cb,MAAMU,cAAc,GAAG,IAAIW,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;EACpDC,KAAK,EAAE,UAD6C;EAEpDC,QAAQ,EAAE;AAF0C,CAA/B,CAAvB"},"metadata":{},"sourceType":"module"}